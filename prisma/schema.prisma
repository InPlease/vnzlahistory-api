generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model CommunityComments {
  id       Int    @id @default(autoincrement())
  comment  String
  video_id Int
  Video    Video  @relation(fields: [video_id], references: [id])
}

model History {
  id        Int      @id @default(autoincrement())
  type      String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model Image {
  url       String   @id @unique
  altText   String?
  createdAt DateTime @default(now())
  updatedAt DateTime
  width     Int?
  height    Int?
  format    String?
  size      Int?
  Video     Video?
}

model News {
  id           Int        @id @default(autoincrement())
  title        String
  content      String
  author       String?
  url          String     @unique
  image        String?
  category     String?
  language     String?
  country      String?
  published_at DateTime
  newsSourceId Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime
  NewsSource   NewsSource @relation(fields: [newsSourceId], references: [id])
}

model NewsSource {
  id        Int      @id @default(autoincrement())
  source    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime
  News      News[]
}

model PageSettingConfig {
  id      Int    @id @default(autoincrement())
  type    Int    @unique
  configs String
}

model RateLimit {
  id                  Int      @id @default(autoincrement())
  source              String
  maxRequestsPerDay   Int
  totalRequests       Int      @default(0)
  totalHourlyRequests Int      @default(0)
  lastReset           DateTime @default(now())
}

model Report {
  id         Int    @id @default(autoincrement())
  name       String @unique
  severity   Int
  reportType String
}

model RequestLog {
  id        Int      @id @default(autoincrement())
  source    String
  createdAt DateTime @default(now())
}

model Tag {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model Video {
  id                   Int                 @id @default(autoincrement())
  bucket_file_name     String              @unique
  ui_title             String?             @unique
  url                  String
  description          String
  createdAt            DateTime            @default(now())
  updatedAt            DateTime
  is_verified          Boolean
  is_reported          Boolean
  report_type          String?
  report_team_comments String?
  tags                 String
  views                Int
  isRecommended        Boolean?
  thumbnailUrl         String?             @unique
  CommunityComments    CommunityComments[]
  Image                Image?              @relation(fields: [thumbnailUrl], references: [url])

  RelatedInfo RelatedInfo[]
}


model RelatedInfo {
  id       Int @id @default(autoincrement())
  idEntity Int
  relatedEntityId Int

  fkRelatedEntityId Video? @relation(fields: [relatedEntityId], references: [id])
}
